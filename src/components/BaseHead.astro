---
import type { SiteMeta } from "@/types";
import { siteConfig } from "@/site-config";
import "../styles/global.css";

import "@fontsource/zen-kaku-gothic-antique/400.css";
import "@fontsource/zen-kaku-gothic-antique/500.css";
import "@fontsource/zen-kaku-gothic-antique/700.css";

type Props = SiteMeta;

const { title, description, ogImage, articleDate } = Astro.props;

const titleSeparator = "â€¢";
const siteTitle = `${title} ${titleSeparator} ${siteConfig.title}`;
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const socialImageURL = new URL(ogImage ? ogImage : "/social-card.png", Astro.url).href;
---

<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0, shrink-to-fit=no" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<title>{siteTitle}</title>

{/* Icons / Favicon */}
<link rel="icon" href="/favicon.ico" sizes="any" />
<link rel="icon" href="/icon.svg" type="image/svg+xml" />
<link rel="apple-touch-icon" href="/apple-touch-icon.png" />
<link rel="manifest" href="/manifest.webmanifest" />
<link rel="canonical" href={canonicalURL} />

{/* Primary Meta Tags */}
<meta name="title" content={siteTitle} />
<meta name="description" content={description} />
<meta name="author" content={siteConfig.author} />

{/* Theme Colour */}
<meta name="theme-color" content="" />

{/* Open Graph / Facebook */}
<meta property="og:type" content={articleDate ? "article" : "website"} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:url" content={canonicalURL} />
<meta property="og:site_name" content={siteConfig.title} />
<meta property="og:locale" content={siteConfig.ogLocale} />
<meta property="og:image" content={socialImageURL} />
<meta property="og:image:width" content="1200" />
<meta property="og:image:height" content="630" />
{
	articleDate && (
		<>
			<meta property="article:author" content={siteConfig.author} />
			<meta property="article:published_time" content={articleDate} />
		</>
	)
}

{/* Twitter */}
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={canonicalURL} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={socialImageURL} />

{/* Sitemap */}
<link rel="sitemap" href="/sitemap-index.xml" />

{/* RSS auto-discovery */}
<link rel="alternate" type="application/rss+xml" title={siteConfig.title} href="/rss.xml" />

{/* Webmentions */}
{
	siteConfig.webmentions && (
		<>
			<link rel="webmention" href={siteConfig.webmentions.link} />
			{siteConfig.webmentions.pingback && (
				<link rel="pingback" href={siteConfig.webmentions.pingback} />
			)}
		</>
	)
}

<!-- Google tag (gtag.js) -->
<script type="text/partytown" async src="https://www.googletagmanager.com/gtag/js?id=G-Q4HB4RGTG5"
></script>
<script type="text/partytown">
	window.dataLayer = window.dataLayer || [];
	function gtag() {
		dataLayer.push(arguments);
	}
	gtag("js", new Date());

	gtag("config", "G-Q4HB4RGTG5");
</script>

<!-- Google Tag Manager -->
<script type="text/partytown">
	(function (w, d, s, l, i) {
		w[l] = w[l] || [];
		w[l].push({ "gtm.start": new Date().getTime(), event: "gtm.js" });
		var f = d.getElementsByTagName(s)[0],
			j = d.createElement(s),
			dl = l != "dataLayer" ? "&l=" + l : "";
		j.async = true;
		j.src = "https://www.googletagmanager.com/gtm.js?id=" + i + dl;
		f.parentNode.insertBefore(j, f);
	})(window, document, "script", "dataLayer", "GTM-WRZCGTBX");
</script>
<!-- End Google Tag Manager -->
